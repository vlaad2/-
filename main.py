### modules ###
import json
from pyqiwip2p import QiwiP2P
from pyqiwip2p.types import QiwiCustomer, QiwiDatetime
import sqlite3
from sqlite3 import Error
import menu as kb
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor, exceptions
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio
import aiohttp
from aiogram.types import CallbackQuery
from models import *
from telebot import TeleBot

db.create_tables([Users])
ref_link = 'https://telegram.me/{}?start={}'

### bot_data ###
TOKEN = '5348730303:AAGHCPqpmMpFdd1-PsYASK0UKP4K8rUQn3Y' 
bot = Bot(token=TOKEN)
dp = Dispatcher(bot,storage = MemoryStorage())


### payment_data ###
QIWI_PRIV_KEY = "eyJ2ZXJzaW9uIjoiUDJQIiwiZGF0YSI6eyJwYXlpbl9tZXJjaGFudF9zaXRlX3VpZCI6Ijg5emk0MS0wMCIsInVzZXJfaWQiOiI3OTM5Mzg1MTMzMCIsInNlY3JldCI6IjQ3Y2JjYTRhYmM5ZWFlMDUyODMyMmRiMDA0YmI5NmE0YTI4ODQ0NGQ1NTc5YTEwZmRlZTNhZjE1ZTI1YWYzNjEifX0="
p2p = QiwiP2P(auth_key=QIWI_PRIV_KEY)


### database_create ###
with sqlite3.connect("smm.db") as conn:
  cursor = conn.cursor()
  cursor.execute("""
  CREATE TABLE IF NOT EXISTS users
  (user INTEGER, name TEXT,allorders INTEGER,balance FLOAT,allmoney FLOAT,orders TEXT)
  """)
orderr = 0
bal = 0 
allm = 0

global key
key = 'd48272e2934efccc410978e4712bbb2d'
### states ###
class order(StatesGroup):
    count = State()
    link = State()
class balans(StatesGroup):
    price = State()
class givebalance(StatesGroup):
    userad = State()
    summa = State()
class admad(StatesGroup):
    ad = State()

### menu ###
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_id = message.chat.id
    splited = message.text.split()
    if not Users.user_exists(user_id):
        Users.create_user(user_id)
        if len(splited) == 2:
            Users.increase_ref_count(splited[1])
    await bot.send_message(message.chat.id,text = f'üëã –ü—Ä–∏–≤–µ—Ç,<b>üë®‚Äçüë©‚Äçüë¶‚Äçüë¶{message.from_user.first_name}üë®‚Äçüë©‚Äçüë¶‚Äçüë¶</b>\n–í–∞—à <b>üÜî {message.from_user.id}</b>\n<b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ</b>',parse_mode = 'HTML',reply_markup = kb.home)
    print(f'–ù–æ–≤—ã–π —é–∑–µ—Ä - {message.from_user.first_name}')
    cursor.execute("select * from users where user = ?",(message.from_user.id,))
    usr = cursor.fetchone()
    if not usr:
        cursor.execute("INSERT INTO users values (:user, :name, :allorders, :balance, :allmoney, :orders);" ,
        {'user':message.from_user.id,
        'name':message.from_user.first_name,
        'allorders':orderr,
        'balance':bal,
        'allmoney':allm,
        'orders': ""})
        conn.commit()

### adm_enter ###
@dp.message_handler(commands=['adm'])
async def send_welcome(message: types.Message):
    if message.from_user.id == 1546182461:
        await bot.send_message(message.chat.id,text = '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ü©∏',reply_markup= kb.adminka)
    else:
        await bot.send_message(message.chat.id,text ='–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–µ—Ä–≤–∏—Å–∞ ‚òπÔ∏è')


### menu_logics ###
@dp.message_handler(content_types = ['text'])
async def get_text(message: types.message):
    if message.text == 'üìä—Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üìä':
        await bot.send_message(message.chat.id,text ='üéÜ',reply_markup=kb.retu)
        await bot.send_message(message.chat.id,text = '–ö—É–¥–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å?',reply_markup=kb.services)
    if message.text == '‚öôÔ∏è–ü—Ä–æ—Ñ–∏–ª—å‚öôÔ∏è':
        balan = cursor.execute(f"SELECT balance FROM users WHERE user = {message.from_user.id}").fetchone()[0]
        allmo = cursor.execute(f"SELECT allmoney FROM users WHERE user = {message.from_user.id}").fetchone()[0]
        orderss = cursor.execute(f"SELECT allorders FROM users WHERE user = {message.from_user.id}").fetchone()[0]
        await bot.send_message(message.chat.id,text = f'üÜî {message.from_user.id}\n\n<b>üîê –í–∞—à –±–∞–ª–∞–Ω—Å:</b> {balan}‚ÇΩ\n<b>üìÆ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:</b> {orderss}\n<b>üì• –í—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ:</b> {allmo}‚ÇΩ',parse_mode='HTML',reply_markup=kb.lk)
    if message.text == 'üÜò SUPPORT üÜò':
        await bot.send_message(message.chat.id,text = '<b>üÜò SUPPORT üÜò @admricker\n\n–ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å:\n\n1: –ø—Ä–æ–±–ª–µ–º—É.\n2: –≤–∞—à üÜî\n3: –≤—Å–µ 1 —á–µ—Ç–∫–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.</b>',parse_mode='HTML')
    if message.text == 'üìö–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ï –°–û–ì–õ–ê–®–ï–ù–ò–ïüìö':
        await bot.send_message(message.chat.id,text = """1.1 –û–∫–∞–∑–∞–Ω–∏–µ —É—Å–ª—É–≥ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –∏—Ö 100% (—Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤) –æ–ø–ª–∞—Ç—ã –ó–∞–∫–∞–∑—á–∏–∫–æ–º. –î–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.\n\n1.2. –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ –æ—Ç –∑–∞–∫–∞–∑–∞ –æ–¥–Ω–æ–π –∏–∑ —Å—Ç–æ—Ä–æ–Ω (–ó–∞–∫–∞–∑—á–∏–∫–∞ –∏–ª–∏ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è) –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞. –≠—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤ –±—É–¥—É—â–µ–º –Ω–∞ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã. –ó–∞–∫–∞–∑—á–∏–∫ - –∫–ª–∏–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å–∞, –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞.\n\n1.3 –ï—Å–ª–∏ –≤—ã –Ω–∞—á–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º, —Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –≤—ã –ø—Ä–∏–Ω—è–ª–∏ –µ–≥–æ –ø—Ä–∞–≤–∏–ª–∞.\n\n1.4 –°–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Ç–æ, —á—Ç–æ —É—Å–ª—É–≥–∞ –±—ã–ª–∞ —Å–ø–∏—Å–∞–Ω–∞/—á–∞—Å—Ç–∏—á–Ω–æ —Å–ø–∏—Å–∞–Ω–∞. \n\n1.5 –°–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è. –ú–Ω–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤ —Å—Ç–∞—Ä—Ç—É–µ—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ, –ª–∏—à–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞. –ö–ª–∏–µ–Ω—Ç –Ω–µ—Å–µ—Ç –≤—Å—é –ø–æ–ª–Ω–æ—Ç—É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–≤–æ—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–µ —É–≤–µ–¥–æ–º–ª—è—è –æ–± —ç—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n1.6 –ñ–∏–≤–∞—è –Ω–∞–∫—Ä—É—Ç–∫–∞ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π! –õ—é–¥–∏ —Å–∞–º–∏ —Å—á–∏—Ç–∞—é—Ç, –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –∏–º –í–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç –∏–ª–∏ –Ω–µ—Ç, —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å—ë—Ç –Ω–∏–∫–∞–∫–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –∞–∫—Ç–∏–≤.\n\n1.7 –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n1.8 –°–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –æ—à–∏–±–∫–∏ –≤ —Å—Å—ã–ª–∫–∞—Ö, –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –∑–∞–∫–∞–∑–µ.\n\n1.9 –°–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –º–µ—Ä–∞–º–∏, –ø—Ä–∏–Ω—è—Ç—ã–º–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –ø—Ä–æ—Ç–∏–≤ —Ä–∞—Å–∫—Ä—É—Ç–∫–∏, - –≤–æ–∑–º–æ–∂–µ–Ω –ª–∏—à—å –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞, –∞ —Ç–∞–∫ –∂–µ –Ω–µ—Å—ë—Ç –ª–∏—à—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –æ—à–∏–±–∫–∏ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞ SAKURA - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–¥–µ–ª–∞–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ –¥–ª—è –∏—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è, –Ω–æ –¥–µ–Ω—å–≥–∏ —Ç–∞–∫ –∂–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –ª–∏—à—å –Ω–∞ –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞.
""")
    
    if message.text == 'üìë –ù–∞–ª–∏—á–∏–µ —É—Å–ª—É–≥':
        await bot.send_message(message.chat.id,text = """<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ Telegram‚ûñ‚ûñ‚ûñ</b>\nTelegram –ü—Ä–æ—Å–º–æ—Ç—Ä—ã | 0.108‚ÇΩ (–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\nTelegram –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ | 0.108‚ÇΩ (–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\n\n<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ Instagram‚ûñ‚ûñ‚ûñ</b>\nInstagram –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ | 0.1‚ÇΩ (–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\nInstagram –õ–∞–π–∫–∏ | 0.24‚ÇΩ (–ó–∞ 1 –ª–∞–π–∫)\nInstagram –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–∞ | 0.004‚ÇΩ (–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\n\n<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ YouTube‚ûñ‚ûñ‚ûñ</b>\nYouTube –ü—Ä–æ—Å–º–æ—Ç—Ä—ã | 0.29‚ÇΩ (–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\nYouTube –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ | 0.56‚ÇΩ (–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\nYouTube –õ–∞–π–∫–∏ | 0.1‚ÇΩ (–ó–∞ 1 –ª–∞–π–∫)\n\n<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ‚ûñ‚ûñ‚ûñ</b>\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –≤ –≥—Ä—É–ø–ø—É | 0.5‚ÇΩ (–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –¥—Ä—É–∑—å—è | 0.46‚ÇΩ (–ó–∞ 1 –∑–∞—è–≤–∫—É)\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –ª–∞–π–∫–∏ | 0.17‚ÇΩ (–ó–∞ 1 –ª–∞–π–∫)\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ —Ä–µ–ø–æ—Å—Ç—ã | 0.24‚ÇΩ (–ó–∞ 1 —Ä–µ–ø–æ—Å—Ç)\n\n<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ Discord‚ûñ‚ûñ‚ûñ</b>\nDiscord –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä | 50‚ÇΩ (–ó–∞ 1 –ø–æ–ª—å–∑–æ–≤–µ—Ç–µ–ª—è)\n\n<b>‚ûñ‚ûñ‚ûñ–ù–∞–∫—Ä—É—Ç–∫–∞ TikTok‚ûñ‚ûñ‚ûñ</b>\nTikTok –ü—Ä–æ—Å–º–æ—Ç—Ä—ã | 0.17‚ÇΩ (–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\nTikTok –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ | 0.17‚ÇΩ (–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\nTikTok –õ–∞–π–∫–∏ | 0.08‚ÇΩ (–ó–∞ 1 –ª–∞–π–∫)""",parse_mode= 'HTML')
    if message.text == 'üí∞ –í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å':
        await bot.send_message(message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ User-ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        await givebalance.userad.set()
    if message.text == 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        allus = cursor.execute('SELECT Count(*) FROM users').fetchone()[0]
        allden = cursor.execute('SELECT SUM(allmoney) FROM users').fetchone()[0]
        allord = cursor.execute('SELECT SUM(allorders) FROM users').fetchone()[0]
        await bot.send_message(message.chat.id,text = f"<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n<b>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {allus}\n<b>–í—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –ø–æ–ø–æ–ª—É—á–µ–Ω–æ:</b> {allden}‚ÇΩ\n<b>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:</b> {allord}",parse_mode='HTML')
    if message.text == '‚ùå –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏':
        await bot.send_message(message.chat.id,text = 'Done!',reply_markup=kb.home)
    if message.text == 'üì® –†–∞—Å—Å—ã–ª–∫–∞':
        await bot.send_message(message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫c—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
        await admad.ad.set()         
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∞':
        await bot.send_message(message.chat.id,text = '–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=kb.home)
    if message.text == 'üí∏–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞üí∏':
        count = Users.get_ref_count(message.chat.id)
        await bot.send_message(message.chat.id,text = f'<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> {ref_link.format("SAKURANAKPYTKABOT",message.chat.id)}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> {count}\n\n–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–π–¥–µ—Ç –≤ –±–æ—Ç–∞ –ø–æ –í–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ —Å–¥–µ–ª–∞–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ,—Ç–æ –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ 5% –æ—Ç —Å—É–º–º—ã –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.',parse_mode='HTML')
    if message.text == 'üßæ–£–°–õ–£–ì–ò –û–¢ SAKURAüßæ':
        await bot.send_message(message.chat.id,text = '–ù–∞—à–∏ —É—Å–ª—É–≥–∏:',reply_markup=kb.sakura)
### adm_AD ###
@dp.message_handler(state=admad.ad)
async def getcount(message: types.Message, state: FSMContext):
    ad = message.text
    await state.update_data(ad=ad)
    await state.finish()
    cursor.execute("SELECT user FROM users")
    userbase = []
    while True:
        row = cursor.fetchone()
        if row == None:
            break
        userbase.append(row)
    if len(userbase) > 1:
        for z in range(len(userbase)):
            await bot.send_message(userbase[z][0],text = f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ!\n{ad}")
    else:
        await bot.send_message(userbase[0], f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ!\n{ad}")  
    await bot.send_message(message.chat.id,text = 'Done!')

### adm_change_balance ###
@dp.message_handler(state=givebalance.summa)
async def getcount(message: types.Message, state: FSMContext):
    data = await state.get_data()
    await state.finish()
    userad = data.get('userad')
    summa = float(message.text)
    newbalance = cursor.execute(f'SELECT balance FROM users WHERE user = {userad}').fetchone()[0]
    newbalance += summa
    cursor.execute(f'UPDATE users SET balance = {newbalance} WHERE user = {userad}')
    conn.commit()
    await bot.send_message(message.chat.id,text = '–ë–∞–ª–∞–Ω—Å –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω')


### adm_change_balance ###
@dp.message_handler(state=givebalance.userad)
async def getcount(message: types.Message, state: FSMContext):
    userad = message.text
    await state.update_data(userad=userad)
    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å')
    await givebalance.summa.set()


### replenishment_method ###
@dp.message_handler(state=balans.price)
async def getcount(message: types.Message, state: FSMContext):
    price = message.text
    await state.update_data(price=price)
    data = await state.get_data()
    state.finish()
    ###
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∞':
        await bot.send_message(message.chat.id,text = '–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=kb.home)
        await state.finish()
        return
    amount = data.get('price')
    amount = int(amount)
    lifetime = 15
    comment = message.from_user.id
    bill = p2p.bill(amount=amount, lifetime=lifetime, comment=comment)
    ###
    markup_inline = types.InlineKeyboardMarkup(resize_keyboard=True)
    buy = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url=f'{bill.pay_url}')
    check = types.InlineKeyboardButton(text='üéÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂', callback_data=f'check_pay:{bill.bill_id}')
    markup_inline.add(buy)
    markup_inline.add(check)
    await bot.send_message(message.chat.id,
                           text='1‚É£ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å–æ–≤–µ—Ä—à–∏—Ç–µ –ø–ª–∞—Ç–µ–∂ –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫–æ –≤—Ç–æ—Ä–æ–º—É –ø—É–Ω–∫—Ç—É\n\n2‚É£ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂" –∏ –í–∞—à–∏  —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ —Å—á–µ—Ç')
    await bot.send_message(message.chat.id,
                           text='‚ùó –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä.\n\n–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤—ã –æ–ø–ª–∞—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Qiwi –∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∞–ø–ø–æ—Ä—Ç—É: @admricker',
                           reply_markup=markup_inline)


### replenishment_check ###
@dp.callback_query_handler(text_startswith="check_pay", state="*")
async def give_win_user(call: CallbackQuery, state: FSMContext):
    bill_id = call.data.split(":")[1]
    status = p2p.check(bill_id=bill_id).status
    check = p2p.check(bill_id=bill_id).comment
    print(bill_id)
    print(status)
    print(check)
    if status == 'PAID' and check == str(call.from_user.id):
        data = await state.get_data()
        await bot.send_message(call.message.chat.id,text = '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!',reply_markup=kb.home)
        amount = float(data.get('price'))
        userid = int(call.from_user.id)
        allmonn = cursor.execute(f"SELECT allmoney FROM users WHERE user = {userid}").fetchone()[0]
        balance = cursor.execute(f"SELECT balance FROM users WHERE user = {userid}").fetchone()[0]
        allmonn = allmonn + amount
        balance = float(balance)
        balik = balance + amount
        cursor.execute(f'UPDATE users SET balance ={balik} WHERE user = {userid}')
        cursor.execute(f'UPDATE users SET allmoney ={allmonn} WHERE user = {userid}')
        conn.commit()
        print(balik)
        await state.finish()
    else:
        await bot.send_message(call.message.chat.id,'–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á–µ—Ç!')


### order ###
@dp.message_handler(state=order.count)
async def getcount(message: types.Message, state: FSMContext):
    count = message.text
    await state.update_data(count=count)
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∞':
            await bot.send_message(message.chat.id,text = '–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=kb.home)
            await state.finish()
            return
    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await bot.send_message(message.chat.id,text = '<b>‚ÄºÔ∏è –í–ê–ñ–ù–û ‚ÄºÔ∏è</b>\n\nüìé –ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: https://youtube.com/channel/–ù–∞–∑–≤–∞–Ω–∏–µ\n\n<b>(–¢–∞–∫ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Ç–∞–∫–∂–µ)\n\n–í–ê–ñ–ù–û –í–í–û–î–ò–¢–¨ –°–´–õ–õ–ö–£ –¢–û–õ–¨–ö–û –í –¢–ê–ö–û–ú –§–û–†–ú–ê–¢–ï.\n\n–ü–†–ò –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ú –í–í–û–î–ï –î–ï–ù–¨–ì–ò –ü–†–û–ü–ê–î–ê–Æ–¢üìõ</b>',parse_mode = 'HTML')
    await order.link.set()


### get_link ###
@dp.message_handler(state=order.link)
async def getlink(message: types.Message, state: FSMContext):
    global link
    link = message.text
    await state.update_data(link=link)
    data = await state.get_data()
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∞':
        await bot.send_message(message.chat.id,text = '–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=kb.home)
        await state.finish()
        return
    global count
    count = data.get("count")
    count = int(count)
    link = data.get("link")    
    global totalprice
    totalprice = price * count
    await state.finish()
    await bot.send_message(message.chat.id,text = f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</b>: {totalprice}‚ÇΩ\n–ó–∞–∫–∞–∑—ã–≤–∞–µ–º?',parse_mode='HTML',reply_markup=kb.confirm)




#servs
@dp.callback_query_handler(lambda c: c.data)
async def ans(call: CallbackQuery,state: FSMContext):
    if call.data == 'ki':
        await bot.send_message(call.message.chat.id,text = '–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ü§π‚Äç‚ôÇÔ∏è –ø–æ–º–æ–∂–µ—Ç –æ–π –∫–∞–∫ –Ω–∞–ø—É–≥–∞—Ç—å –≤—Ä–∞–≥–∞ –Ω–∞–∫—Ä—É—Ç–∏–≤ –µ–º—É –∑–∞ 30 —Å–µ–∫—É–Ω–¥ –≤ —á–∞—Ç 1000 –±–æ—Ç–æ–≤ = 150‚ÇΩ\n–ó–∞–∫—Ä—ã—Ç—ã–µ/–æ—Ç–∫—Ä—ã—Ç—ã–µ –ë–ï–ó –†–ê–ó–ù–ò–¶–´üòÖ\n–ó–∞–∫–∞–∑–∞—Ç—å: https://t.me/admricker')
    if call.data == 'rekl':
        await bot.send_message(call.message.chat.id,text = '–ó–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É —Ä–∞—Å—Å—ã–ª–∫—É –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –ø–æ —Ö–æ—Ä–æ—à–µ–π —Ü–µ–Ω–µ\nüöÄ https://t.me/admricker')
    if call.data == 'refka':
        usid = call.message.from_user.id
        last = cursor.execute(f'Select ref FROM users where user_id = {usid}')
    if call.data == 'bal':
        await bot.send_message(call.message.chat.id,text = '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üì• ',reply_markup=kb.retu)
        await balans.price.set()
    if call.data == 'mo':
        userid = call.from_user.id
        zakaz = cursor.execute(f"SELECT orders FROM users WHERE user = {userid}").fetchone()[0]
        if zakaz == '':
            await bot.send_message(call.message.chat.id,text = '–í—ã –µ—â–µ –Ω–µ –¥–µ–ª–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤.')
        else:
            async with aiohttp.ClientSession() as session:
                async with session.get(f'https://justanotherpanel.com/api/v2/?key={key}&action=status&orders={zakaz}') as resp:
                    if resp.status == 200:
                        ors = await resp.text()
                        dannie = json.loads(ors)
                        zakazi = ""
                        for d in dannie:
                            zakaz_num = d
                            status = dannie[zakaz_num]['status']
                            remains = dannie[zakaz_num]['remains']
                            ans = f"<b>–ó–∞–∫–∞–∑ #{zakaz_num}</b>\n–û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫—Ä—É—Ç–∏—Ç—å: {remains}\n–°—Ç–∞—Ç—É—Å: {status}"
                            if zakazi == "":
                                zakazi = ans
                            else:
                                zakazi = zakazi + "\n\n" + ans
                            answer = f"<b>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã</b>:\n\n{zakazi}"
                        await bot.send_message(call.message.chat.id, text = answer,parse_mode='HTML')
                    else:
                        await bot.send_message(call.message.chat.id.text,text = '–°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç,–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.')
    if call.data == 'hand':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.handls)
    if call.data == 'yt':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.youtubeserv)
    if call.data == 'inst':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.instagramserv)
    if call.data == 'vk':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.vkserv)
    if call.data == 'ds':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.discordserv)
    if call.data == 'tt':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.tiktokserv)
    if call.data == 'tg':
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",reply_markup=kb.telegramserv)
    #### YOUTUBE serv ###
    if call.data == 'yttw':
        global price
        price = float(0.29)
        global serviceid
        serviceid = 4152
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nYouTube –ü—Ä–æ—Å–º–æ—Ç—Ä—ã\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'ytts':
        price = float(0.56)
        serviceid = 4395
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nYouTube –ø–æ–¥–ø–∏—Å—á–∏–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø–æ–¥–ø–∏c—á–∏–∫–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'yttl':
        price = float(0.1)
        serviceid = 3475
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\YouTube –ª–∞–π–∫–∏ –≤ –∫–∞–Ω–∞–ª\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ª–∞–π–∫)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    #### INSTAGRAM serv ###
    if call.data == 'innst1':
        price = float(0.1)
        serviceid = 4448
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nInstagram –ü–æ–¥–ø–∏—Å—á–∏–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'innst2':
        price = float(0.24)
        serviceid = 3788
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nInstagram –õ–∞–π–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ª–∞–π–∫)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'innst3':
        price = float(0.004)
        serviceid = 3350
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nInstagram –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç–æ—Ä–∏—Å\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    #### –í–ö–û–ù–¢–ê–ö–¢–ï serv ###
    if call.data == 'vkss':
        price = float(0.5)
        serviceid = 3752
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –≤ –≥—Ä—É–ø–ø—É\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'vkff':
        price = float(0.46)
        serviceid = 3754
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –¥—Ä—É–∑—å—è\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –∑–∞—è–≤–∫—É)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'vkll':
        price = float(0.17)
        serviceid = 3756
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ –ª–∞–π–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ª–∞–π–∫)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'vkrr':
        price = float(0.24)
        serviceid = 3761
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\n–í–∫–æ–Ω—Ç–∞–∫—Ç–µ —Ä–µ–ø–æ—Å—Ç—ã\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 —Ä–µ–ø–æ—Å—Ç)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    #### DIScORD serv ###
    if call.data == 'diss':
        price = float(50)
        serviceid = 5657
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nDiscord –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 —é–∑–µ—Ä–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    #### TIKTOK serv ###
    if call.data == 'ttww':
        price = float(0.17)
        serviceid = 5636
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nTikTok –ü—Ä–æ—Å–º–æ—Ç—Ä—ã\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'ttss':
        price = float(0.17)
        serviceid = 3882
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nTikTok –ü–æ–¥–ø–∏—Å—á–∏–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∫–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'ttll':
        price = float(0.08)
        serviceid = 4174
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\nTikTok –õ–∞–π–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ª–∞–π–∫)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    #### TELEGRAM serv ###
    if call.data == 'tggb1':
        price = float(0.13)
        serviceid = 2163
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\Telegram –ü—Ä–æ—Å–º–æ—Ç—Ä—ã\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø—Ä–æ—Å–º–æ—Ç—Ä)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'tggb2':
        price = float(0.13)
        serviceid = 363
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>Order</b>\Telegram –ü–æ–¥–ø–∏—Å—á–∏–∫–∏\n–¶–µ–Ω–∞: {price}‚ÇΩ(–ó–∞ 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞)\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Çc–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n(min: 100,max: 10000)",parse_mode='HTML')
        await order.count.set()
    if call.data == 'tggb3':
        await bot.send_message(call.message.chat.id,text = '<b>–ù–∞–∫—Ä—É—Ç–∫–∞ –≤ —á–∞—Ç üí¨ (—Ç–µ–ª–µ–≥—Ä–∞–º–º)\n\nüî∞–û—Ç 100 –¥–æ 10000\nüí∑–¶–µ–Ω–∞ –∑–∞ 100 = 15‚ÇΩ</b>',parse_mode='HTML',reply_markup = kb.zakazat)
    if call.data == 'han11':
        await bot.send_message(call.message.chat.id,text = '<b>üî∞–û—Ç 100 –¥–æ 10000\nüí∑–¶–µ–Ω–∞ –∑–∞ 100 = 15‚ÇΩ</b>',parse_mode='HTML',reply_markup = kb.zakazat)
    if call.data == 'da':
        userid = int(call.from_user.id)
        allmoney = cursor.execute(f"SELECT allmoney FROM users WHERE user = {userid}").fetchone()[0]
        balance = cursor.execute(f"SELECT balance FROM users WHERE user = {userid}").fetchone()[0]
        allorde = cursor.execute(f"SELECT allorders FROM users WHERE user = {userid}").fetchone()[0]
        if balance >= totalprice:
            async with aiohttp.ClientSession() as session:
                async with session.get(f'https://justanotherpanel.com/api/v2/?key={key}&action=add&service={serviceid}&quantity={count}&link={link}') as resp:
                    if resp.status == 200:
                        await state.finish()
                        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n–û—Çc–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤ '–ú–æ–∏ –∑–∞–∫–∞–∑—ã'")
                        balance = balance - totalprice
                        allorde = allorde + 1
                        cursor.execute(f'UPDATE users SET balance ={balance} WHERE user = {userid}')
                        cursor.execute(f'UPDATE users SET allorders ={allorde} WHERE user = {userid}')
                        conn.commit()
                        resp = (await resp.text())
                        orde = cursor.execute(f"SELECT orders FROM users WHERE user = {userid}").fetchone()[0]
                        if orde == "":
                            orde = str(orde)
                            ordee = orde + resp[9:-1]
                            cursor.execute(f'UPDATE users SET orders = ? WHERE user = ?;', (ordee, userid))
                            conn.commit()
                        else:
                            orde = str(orde)
                            ordee = orde + ',' + resp[9:-1]
                            cursor.execute(f'UPDATE users SET orders = ? WHERE user = ?;', (ordee, userid))
                            conn.commit() 
        else:      
            await bot.send_message(call.message.chat.id,text = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤\n–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å')     
    if call.data == 'net':
        await bot.send_message(call.message.chat.id,text = '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω',reply_markup=kb.home)


executor.start_polling(dp)




